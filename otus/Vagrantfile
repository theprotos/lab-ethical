# -*- mode: ruby -*-
# vi: set ft=ruby :

# vagrant rsync-auto


VAGRANTFILE_API_VERSION = "2"
PROJECT = "ethical"
DESCRIPTION = "#{PROJECT} lab environment \n\nvagrant:vagrant"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

if Vagrant.has_plugin?("vagrant-vbguest")
  config.vbguest.auto_update = false
end

############### KALI ###############
  config.vm.define "kali" do |kali|
    kali.vm.box = "kalilinux/rolling"
    kali.vm.hostname = "#{PROJECT}-kali"
    kali.vm.network "private_network",
          type: "static",
          ip: "192.168.100.100",
          netmask:"255.255.255.0"
    #kali.vm.network "private_network",
    #  type: "static",
    #  ip: "192.168.100.100",
    #  virtualbox__intnet: "mynetwork"
    kali.ssh.insert_key = false
    kali.vm.provider :virtualbox do |vb|
      vb.gui = false
      #vb.name = HOSTNAME
      vb.memory = 1024
      vb.cpus = 2
      #vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
      vb.customize ["modifyvm", :id, "--description", "#{DESCRIPTION}"]
      vb.customize ["setextradata", :id, "GUI/HidLedsSync", 0]
    end
    kali.vm.synced_folder "bootstrap", "/vagrant", type: "rsync", create: "true"
    kali.vm.synced_folder "labs", "/vagrant/labs", type: "rsync", create: "true"
    #config.vm.network "forwarded_port", guest: 80, host: 50080
    #config.vm.network "forwarded_port", guest: 8080, host: 58080
    #config.vm.network "forwarded_port", guest: 443, host: 50443
    kali.vm.provision "shell", run: "always", inline: <<-SHELL
      cd /vagrant
      ./kali-bootstrap.sh
      #./labs/lab1.sh
    SHELL
    #  kali.vm.provision "ansible" do |ansible|
    #    ansible.compatibility_mode = "2.0"
    #    ansible.playbook = "provisioning/main.yml"
    #  end
  end

  ############### Centos ###############
    config.vm.define "centos" do |centos|
      centos.vm.box = "centos/stream8"
      centos.vm.hostname = "#{PROJECT}-centos"
      #centos.ssh.insert_key = false
      centos.vm.network "private_network",
        type: "static",
        ip: "192.168.100.102"
      centos.vm.provider :virtualbox do |vb|
        vb.gui = false
        #vb.name = "#{PROJECT}-centos"
        vb.memory = 1024
        vb.cpus = 1
        #vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        vb.customize ["modifyvm", :id, "--ioapic", "on"]
        vb.customize ["modifyvm", :id, "--description", "#{DESCRIPTION}"]
        vb.customize ["setextradata", :id, "GUI/HidLedsSync", 0]
        #vb.customize ["modifyvm", :id, "--nic1", "none"]

        unless File.exist?('./sata1.vdi')
          vb.customize ['createhd', '--filename', './sata1.vdi', '--size', 1 * 1024]
        end
        vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
        vb.customize ['storageattach', :id, '--storagectl', 'SATA', '--port', 1, '--device', 0, '--type', 'hdd', '--medium',  './sata1.vdi']

      end
      centos.vm.synced_folder "bootstrap", "/vagrant", type: "rsync", create: "true"
      centos.vm.synced_folder "labs", "/vagrant/labs", type: "rsync", create: "true"
      centos.vm.provision "shell", run: "always", inline: <<-SHELL
        cd /vagrant
        ./centos-bootstrap.sh
        #./network.sh -m 00:11:22:33:44:55
      SHELL

      config.trigger.after :destroy do
        if File.exist?('./sata1.vdi')
          puts '==> Deleting SATA.vdi'
          File.delete('./sata1.vdi')
        end
      end
    end

    ############### Ubuntu ###############
      config.vm.define "ubuntu" do |ubuntu|
        ubuntu.vm.box = "ubuntu/jammy64"
        ubuntu.vm.hostname = "#{PROJECT}-ubuntu"
        #ubuntu.ssh.insert_key = false
        ubuntu.vm.network "private_network",
          type: "static",
          ip: "192.168.100.103"
        ubuntu.vm.provider :virtualbox do |vb|
          vb.gui = false
          #vb.name = "#{PROJECT}-ubuntu"
          vb.memory = 1024
          vb.cpus = 1
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
          vb.customize ["modifyvm", :id, "--ioapic", "on"]
          vb.customize ["modifyvm", :id, "--description", "#{DESCRIPTION}"]
          vb.customize ["setextradata", :id, "GUI/HidLedsSync", 0]
          #vb.customize ["modifyvm", :id, "--nic1", "none"]
        end
        ubuntu.vm.synced_folder "bootstrap", "/vagrant", type: "rsync", create: "true"
        ubuntu.vm.synced_folder "labs", "/vagrant/labs", type: "rsync", create: "true"
        ubuntu.vm.provision "shell", run: "always", inline: <<-SHELL
          cd /vagrant
          ./ubuntu-bootstrap.sh
          #./network.sh -m 00:11:22:33:44:55
        SHELL
      end

end

